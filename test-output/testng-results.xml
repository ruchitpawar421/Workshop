<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="2" passed="1">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="64" started-at="2017-01-28T15:01:56Z" finished-at="2017-01-28T15:01:56Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="64" started-at="2017-01-28T15:01:56Z" finished-at="2017-01-28T15:01:56Z">
      <class name="com.qait.training.ExampleProject.TestNgTest">
        <test-method status="PASS" signature="beforeSuite()[pri:0, instance:com.qait.training.ExampleProject.TestNgTest@66d2e7d9]" name="beforeSuite" is-config="true" duration-ms="19" started-at="2017-01-28T20:31:56Z" finished-at="2017-01-28T20:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method status="PASS" signature="add()[pri:0, instance:com.qait.training.ExampleProject.TestNgTest@66d2e7d9]" name="add" duration-ms="12" started-at="2017-01-28T20:31:56Z" finished-at="2017-01-28T20:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- add -->
        <test-method status="FAIL" signature="divide()[pri:0, instance:com.qait.training.ExampleProject.TestNgTest@66d2e7d9]" name="divide" duration-ms="9" started-at="2017-01-28T20:31:56Z" finished-at="2017-01-28T20:31:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Value should be greater than 1. Denominator should be less than numerator expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Value should be greater than 1. Denominator should be less than numerator expected [true] but found [false]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertTrue(Assert.java:42)
	at com.qait.training.ExampleProject.TestNgTest.divide(TestNgTest.java:39)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.lang.reflect.Method.invoke(Unknown Source)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1177)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:129)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:112)
	at org.testng.TestRunner.privateRun(TestRunner.java:756)
	at org.testng.TestRunner.run(TestRunner.java:610)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:387)
	at org.testng.SuiteRunner.access$000(SuiteRunner.java:39)
	at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:421)
	at org.testng.internal.thread.ThreadUtil$2.call(ThreadUtil.java:64)
	at java.util.concurrent.FutureTask.run(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(Unknown Source)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(Unknown Source)
	at java.lang.Thread.run(Unknown Source)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- divide -->
        <test-method status="PASS" signature="afterSuite()[pri:0, instance:com.qait.training.ExampleProject.TestNgTest@66d2e7d9]" name="afterSuite" is-config="true" duration-ms="0" started-at="2017-01-28T20:31:56Z" finished-at="2017-01-28T20:31:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- com.qait.training.ExampleProject.TestNgTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
